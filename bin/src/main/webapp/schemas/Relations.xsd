<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:gml="http://www.opengis.net/gml" xmlns:cgu="urn:cgi:xmlns:CGI:Utilities:1.0" xmlns:gwml="http://www.nrcan.gc.ca/xml/gwml/1" targetNamespace="http://www.nrcan.gc.ca/xml/gwml/1" elementFormDefault="qualified" attributeFormDefault="unqualified"><!-- Schema auto-generated by FullMoon, applying rule suite xmi11ea -->
    <annotation>
        <documentation>The GWML Relations package contains a set of classes used to manage the relation between two objects.</documentation>
    </annotation>
    <import namespace="http://www.opengis.net/gml" schemaLocation="http://schemas.opengis.net/gml/3.1.1/base/gml.xsd"/>
    <import namespace="urn:cgi:xmlns:CGI:Utilities:1.0" schemaLocation="http://www.geosciml.org/cgiutilities/1.0/xsd/cgiUtilities.xsd"/>
    <include schemaLocation="gwml.xsd"/>
    <element abstract="true" name="AbstractRelation" substitutionGroup="gml:_GML" type="gwml:AbstractRelationType">
        <annotation>
            <documentation>A relation between 2 objects.  This is required to implement a relation between a object outside h2o namespace (a gsml:Site for example) and a h2o (or any other object).  The case we try to solve here is adding new relationship to an existing class that is at the top of a hierarchy.  Deriving from this class will not include descendant, and the class cannot be directly altered (it's not our namespace). For example, I wish to add 'physiographicRegion' property to gsml:Site to link to h2o:PhysiographicRegion.  I can't derive a new h2o:Site because I loose gsml:Profile, etc.. (unless I recreate the whole structure under h2o -- which defeats the purpose of inheritance), and I cannot alter gsml because in theory, I just import it.  This relation class allows to soft type such a relation (instead of user a hard property)</documentation>
        </annotation>
    </element>
    <complexType abstract="true" name="AbstractRelationType">
        <complexContent>
            <extension base="gml:AbstractGMLType">
                <sequence>
                    <element name="sourceRole" type="cgu:CodeWithAuthorityType">
                        <annotation>
                            <documentation>The role of the source </documentation>
                        </annotation>
                    </element>
                    <element name="targetRole" type="cgu:CodeWithAuthorityType">
                        <annotation>
                            <documentation>all target should have the same role</documentation>
                        </annotation>
                    </element>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <complexType name="AbstractRelationPropertyType">
        <sequence minOccurs="0">
            <element ref="gwml:AbstractRelation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
    </complexType>
    <complexType abstract="true" name="AbstractRelationPropertyByValueType">
        <sequence>
            <element ref="gwml:AbstractRelation"/>
        </sequence>
    </complexType>
    <element name="LocationRelation" substitutionGroup="gwml:AbstractRelation" type="gwml:LocationRelationType">
        <annotation>
            <documentation>Establish a relation based on the location of the source.  This should be otherwise calculated by some spatial operation, but it's now always possible</documentation>
        </annotation>
    </element>
    <complexType name="LocationRelationType">
        <complexContent>
            <extension base="gwml:AbstractRelationType"/>
        </complexContent>
    </complexType>
    <complexType name="LocationRelationPropertyType">
        <sequence minOccurs="0">
            <element ref="gwml:LocationRelation"/>
        </sequence>
        <attributeGroup ref="gml:AssociationAttributeGroup"/>
    </complexType>
    <complexType name="LocationRelationPropertyByValueType">
        <sequence>
            <element ref="gwml:LocationRelation"/>
        </sequence>
    </complexType>
</schema>